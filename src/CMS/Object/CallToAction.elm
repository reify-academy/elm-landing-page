-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module CMS.Object.CallToAction exposing (PagesOptionalArguments, actionUrl, createdAt, id, label, pages, placement, status, updatedAt)

import CMS.Enum.CallToActionPlacement
import CMS.Enum.PageOrderByInput
import CMS.Enum.Status
import CMS.InputObject
import CMS.Interface
import CMS.Object
import CMS.Scalar
import CMS.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


status : SelectionSet CMS.Enum.Status.Status CMS.Object.CallToAction
status =
    Object.selectionForField "Enum.Status.Status" "status" [] CMS.Enum.Status.decoder


id : SelectionSet CMS.Scalar.Id CMS.Object.CallToAction
id =
    Object.selectionForField "Scalar.Id" "id" [] (Object.scalarDecoder |> Decode.map CMS.Scalar.Id)


createdAt : SelectionSet CMS.Scalar.DateTime CMS.Object.CallToAction
createdAt =
    Object.selectionForField "Scalar.DateTime" "createdAt" [] (Object.scalarDecoder |> Decode.map CMS.Scalar.DateTime)


updatedAt : SelectionSet CMS.Scalar.DateTime CMS.Object.CallToAction
updatedAt =
    Object.selectionForField "Scalar.DateTime" "updatedAt" [] (Object.scalarDecoder |> Decode.map CMS.Scalar.DateTime)


placement : SelectionSet (Maybe CMS.Enum.CallToActionPlacement.CallToActionPlacement) CMS.Object.CallToAction
placement =
    Object.selectionForField "(Maybe Enum.CallToActionPlacement.CallToActionPlacement)" "placement" [] (CMS.Enum.CallToActionPlacement.decoder |> Decode.nullable)


actionUrl : SelectionSet (Maybe String) CMS.Object.CallToAction
actionUrl =
    Object.selectionForField "(Maybe String)" "actionUrl" [] (Decode.string |> Decode.nullable)


label : SelectionSet (Maybe String) CMS.Object.CallToAction
label =
    Object.selectionForField "(Maybe String)" "label" [] (Decode.string |> Decode.nullable)


type alias PagesOptionalArguments =
    { where_ : OptionalArgument CMS.InputObject.PageWhereInput
    , orderBy : OptionalArgument CMS.Enum.PageOrderByInput.PageOrderByInput
    , skip : OptionalArgument Int
    , after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    }


{-|

  - where\_ -

-}
pages : (PagesOptionalArguments -> PagesOptionalArguments) -> SelectionSet decodesTo CMS.Object.Page -> SelectionSet (Maybe (List decodesTo)) CMS.Object.CallToAction
pages fillInOptionals object_ =
    let
        filledInOptionals =
            fillInOptionals { where_ = Absent, orderBy = Absent, skip = Absent, after = Absent, before = Absent, first = Absent, last = Absent }

        optionalArgs =
            [ Argument.optional "where" filledInOptionals.where_ CMS.InputObject.encodePageWhereInput, Argument.optional "orderBy" filledInOptionals.orderBy (Encode.enum CMS.Enum.PageOrderByInput.toString), Argument.optional "skip" filledInOptionals.skip Encode.int, Argument.optional "after" filledInOptionals.after Encode.string, Argument.optional "before" filledInOptionals.before Encode.string, Argument.optional "first" filledInOptionals.first Encode.int, Argument.optional "last" filledInOptionals.last Encode.int ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "pages" optionalArgs object_ (identity >> Decode.list >> Decode.nullable)
