-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module CMS.Enum.ImageFit exposing (ImageFit(..), decoder, list, toString)

import Json.Decode as Decode exposing (Decoder)


{-|

  - Clip - Resizes the image to fit within the specified parameters without distorting, cropping, or changing the aspect ratio.
  - Crop - Resizes the image to fit the specified parameters exactly by removing any parts of the image that don't fit within the boundaries.
  - Scale - Resizes the image to fit the specified parameters exactly by scaling the image to the desired size. The aspect ratio of the image is not respected and the image can be distorted using this method.
  - Max - Resizes the image to fit within the parameters, but as opposed to 'fit:clip' will not scale the image if the image is smaller than the output size.

-}
type ImageFit
    = Clip
    | Crop
    | Scale
    | Max


list : List ImageFit
list =
    [ Clip, Crop, Scale, Max ]


decoder : Decoder ImageFit
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "clip" ->
                        Decode.succeed Clip

                    "crop" ->
                        Decode.succeed Crop

                    "scale" ->
                        Decode.succeed Scale

                    "max" ->
                        Decode.succeed Max

                    _ ->
                        Decode.fail ("Invalid ImageFit type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : ImageFit -> String
toString enum =
    case enum of
        Clip ->
            "clip"

        Crop ->
            "crop"

        Scale ->
            "scale"

        Max ->
            "max"
