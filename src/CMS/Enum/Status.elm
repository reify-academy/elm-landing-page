-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module CMS.Enum.Status exposing (Status(..), decoder, list, toString)

import Json.Decode as Decode exposing (Decoder)


type Status
    = Draft
    | Published
    | Archived


list : List Status
list =
    [ Draft, Published, Archived ]


decoder : Decoder Status
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "DRAFT" ->
                        Decode.succeed Draft

                    "PUBLISHED" ->
                        Decode.succeed Published

                    "ARCHIVED" ->
                        Decode.succeed Archived

                    _ ->
                        Decode.fail ("Invalid Status type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : Status -> String
toString enum =
    case enum of
        Draft ->
            "DRAFT"

        Published ->
            "PUBLISHED"

        Archived ->
            "ARCHIVED"
