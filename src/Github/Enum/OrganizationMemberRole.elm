-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Github.Enum.OrganizationMemberRole exposing (OrganizationMemberRole(..), decoder, list, toString)

import Json.Decode as Decode exposing (Decoder)


{-| The possible roles within an organization for its members.

  - Member - The user is a member of the organization.
  - Admin - The user is an administrator of the organization.

-}
type OrganizationMemberRole
    = Member
    | Admin


list : List OrganizationMemberRole
list =
    [ Member, Admin ]


decoder : Decoder OrganizationMemberRole
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "MEMBER" ->
                        Decode.succeed Member

                    "ADMIN" ->
                        Decode.succeed Admin

                    _ ->
                        Decode.fail ("Invalid OrganizationMemberRole type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : OrganizationMemberRole -> String
toString enum =
    case enum of
        Member ->
            "MEMBER"

        Admin ->
            "ADMIN"
